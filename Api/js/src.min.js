!function(){"use strict";angular.module("app",["ngRoute","controllers","LocalStorageModule"]),angular.module("controllers",[]),angular.module("app").config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptorService")}]),angular.module("app").run(["AccountService",function(e){e.getIdentity()}]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{templateUrl:"/js/home/index.html",controller:"IndexController"}).when("/create",{templateUrl:"/js/home/create.html",controller:"CreateController"}),e.when("/login",{templateUrl:"/js/account/login.html",controller:"LoginController"}).when("/register",{templateUrl:"/js/account/register.html",controller:"RegisterController"}).when("/manage/logins",{templateUrl:"/js/account/manage/manageLogins.html",controller:"ManageLoginsController"}),e.when("/facebook",{templateUrl:"/js/user/facebook.html",controller:"FacebookController"}),e.otherwise({redirectTo:"/"})}])}(),function(){"use strict";function e(e,t,n,o,r,a){var i=n.path().split(/[=&]+/);if("/error"==i[0])return void(t.action="error");var c=i[1];console.log("Access token"),a.getUserInfo(c).then(function(e){console.log("Get User Info"),console.log(e.data),t.loginProvider=e.data.loginProvider,t.model={name:e.data.name,username:e.data.username,email:e.data.email},e.data.hasRegistered?(t.action="process",a.identity.isAuth?a.addExternalLogin({externalAccessToken:c}).then(function(e){o.location.href="/#/manage/logins?m=added"},function(e){t.res=e}):(r.set("authorizationData",{token:c}),o.location.href="/#/")):t.action="register"},function(e){t.res=e}),t.registerExternal=function(e){a.registerExternal(e,c).then(function(e){t.res="You've registered successfully",console.log(e)},function(e){t.res=e})}}angular.module("controllers").controller("ExternalLoginController",e),e.$inject=["$http","$scope","$location","$window","localStorageService","AccountService"]}(),function(){"use strict";function e(e,t,n){n.getExternalLogins().then(function(t){e.logins=t.data}),e.message="",e.login=function(o){n.login(o).then(function(e){t.path("/").search("m","welcome")},function(t){e.message=t.error_description})}}angular.module("app").controller("LoginController",["$scope","$location","AccountService",e])}(),function(){"use strict";function e(e,t,n,o){e.savedSuccessfully=!1,e.message="",e.register=function(r){o.register(r).then(function(o){e.savedSuccessfully=!0,e.message="User has been registered successfully,  you will be redicted to login page in 2 seconds.",n(function(){t.path("/login")},2e3)},function(t){var n=[];for(var o in t.data.modelState)for(var r=0;r<t.data.modelState[o].length;r++)n.push(t.data.modelState[o][r]);e.message="Failed to register user due to:"+n.join(" ")})}}angular.module("controllers").controller("RegisterController",["$scope","$location","$timeout","AccountService",e])}(),function(){"use strict";function e(e){function t(){}e.title="CreateController",t()}angular.module("app").controller("CreateController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){e.create=function(t){e.result=t.name}}angular.module("controllers").controller("IndexController",["$scope",e])}(),function(){"use strict";angular.module("app").factory("FacebookService",["$q","$window",function(e,t){var n={};return t.fbAsyncInit=function(){FB.init({appId:"292179600807388",status:!0,cookie:!0,xfbml:!0,version:"v2.4"}),console.log("Facebook loaded")},n.api=function(t,n){var o=e.defer();return FB.api(t,n,function(e){!e||e.error?o.reject("Error occured"):o.resolve(e)}),o.promise},n}])}(),function(){"use strict";function e(e,t){e.identity=t.identity,e.logout=function(){t.logout()}}angular.module("controllers").controller("NavbarController",["$scope","AccountService",e])}(),function(){"use strict";function e(e,t){function n(){t.api("/me",{fields:"last_name"}).then(function(t){e.result=t})}e.title="FacebookController",n()}angular.module("app").controller("FacebookController",e),e.$inject=["$scope","FacebookService"]}(),function(){"use strict";function e(e,t){t.getManageLogins().then(function(t){e.logins=t.data.logins,e.externalLoginProviders=t.data.externalLoginProviders}),e.removeLogin=function(n,o){t.removeLogin(n).then(function(t){e.res="Removed",e.logins.splice(o,1)})}}angular.module("controllers").controller("ManageLoginsController",e),e.$inject=["$scope","AccountService"]}(),function(){"use strict";function e(e,t,n){var o={};return o.identity={isAuth:!1,username:""},o.register=function(e){return o.logout(),t.post("/api/account/register",e)},o.login=function(r){var a="grant_type=password&username="+r.username+"&password="+r.password,i=e.defer();return t.post("/token",a,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(e){n.set("authorizationData",{token:e.data.access_token,username:r.username}),o.identity.isAuth=!0,o.identity.username=r.username,i.resolve(e)},function(e){o.logout(),i.reject(e)}),i.promise},o.logout=function(){n.remove("authorizationData"),o.identity.isAuth=!1,o.identity.username=""},o.getIdentity=function(){var e=n.get("authorizationData");e&&(o.identity.isAuth=!0,o.identity.username=e.username)},o.getUserInfo=function(e){var n=e?{headers:{Authorization:"Bearer "+e}}:{};return t.get("/api/account/UserInfo",n)},o.getExternalLogins=function(e,n){return t.get("/api/account/externalLogins?returnUrl="+encodeURIComponent(e||"/js/account/externalLogin.html")+"&generateState="+(n||!1))},o.registerExternal=function(e,n){var o=n?{headers:{Authorization:"Bearer "+n}}:{};return t.post("/api/account/registerExternal",e,o)},o.addExternalLogin=function(e){return t.post("/api/account/addExternalLogin",e)},o.removeLogin=function(e){return t.post("/api/account/removeLogin",e)},o.getManageLogins=function(e){return t.get("/api/account/manageInfo?returnUrl="+encodeURIComponent(e||"/js/account/externalLogin.html"))},o}angular.module("app").factory("AccountService",e),e.$inject=["$q","$http","localStorageService"]}(),function(){"use strict";function e(e,t,n){var o={};return o.request=function(e){e.headers=e.headers||{};var t=n.get("authorizationData");return t&&(e.headers.Authorization="Bearer "+t.token),e},o.responseError=function(n){return 401===n.status&&t.path("/login"),e.reject(n)},o}angular.module("app").factory("AuthInterceptorService",e),e.$inject=["$q","$location","localStorageService"]}();